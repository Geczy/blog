on: push
name: ðŸš€ Deploy website on push
env:
  DATABASE_URL: ${{secrets.DATABASE_URL}}
  NEXT_PUBLIC_GISCUS_CATEGORY_ID: ${{secrets.NEXT_PUBLIC_GISCUS_CATEGORY_ID}}
  NEXT_PUBLIC_GISCUS_CATEGORY: ${{secrets.NEXT_PUBLIC_GISCUS_CATEGORY}}
  NEXT_PUBLIC_GISCUS_REPOSITORY_ID: ${{secrets.NEXT_PUBLIC_GISCUS_REPOSITORY_ID}}
  NEXT_PUBLIC_GISCUS_REPO: ${{secrets.NEXT_PUBLIC_GISCUS_REPO}}
  EMAILOCTOPUS_API_URL: ${{secrets.EMAILOCTOPUS_API_URL}}
  EMAILOCTOPUS_API_KEY: ${{secrets.EMAILOCTOPUS_API_KEY}}
  EMAILOCTOPUS_LIST_ID: ${{secrets.EMAILOCTOPUS_LIST_ID}}

jobs:
  web-deploy:
    name: ðŸŽ‰ Deploy
    runs-on: ubuntu-latest
    steps:
    - name: ðŸšš Get latest code
      uses: actions/checkout@v3

    - name: Use Node.js 16
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - uses: pnpm/action-setup@v2.0.1
      name: Install pnpm
      id: pnpm-install
      with:
        version: 7
        run_install: false

    - name: Get pnpm store directory
      id: pnpm-cache
      run: |
        echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install

    - name: Build
      run: pnpm build

    - name: ðŸ“‚ Sync files
      uses: SamKirkland/FTP-Deploy-Action@4.3.0
      with:
        server: ${{ secrets.FTPSERVER }}
        username: ${{ secrets.FTPUSERNAME }}
        password: ${{ secrets.FTPPASSWORD }}
        local-dir: "./out/"
